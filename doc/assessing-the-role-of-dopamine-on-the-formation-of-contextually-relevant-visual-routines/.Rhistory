knitr::include_graphics(paradigm.fig.pth)
survey_dat <- data.frame(task = c("AB", "MT", "CC", "SRT"),
e = c(60, 60, 49, 60),
med = c(24, 40, 24, 34))
knitr::kable(survey_dat, col.names = c("task", "n exp", "med N"), align = "lcc", digits = c(0, 0, 0, 0), "simple", caption = "Typical N found from literature survey. n exp = number or experiments, med N = median N")
behav.results.fig.pth <- '../images/EPS_all_tasks_behav.pdf'
knitr::include_graphics(behav.results.fig.pth)
abfname <- "../data/total_of_313_subs_AB_task_trial_level_data.csv"
ab_res <- do.AB.analysis(abfname)
mtfname <- "../data/total_of_313_subs_SingDual_task_trial_level_data.csv"
mt_res <- do.MT.analysis(mtfname)
srtfname <- "../data/total_of_313_subs_SRT_task_trial_level_data.csv"
srt_res <- do.SRT.analysis(srtfname)
ccfname <- "../data/total_of_313_subs_CC_task_trial_level_data.csv"
cc_res <- do.CC.analysis(ccfname)
attEF.fx.fig.pth <- '../images/EPS_EF_tasks_fx_sz.pdf'
knitr::include_graphics(attEF.fx.fig.pth)
sum_fx_p_dat <- get_summary_data_fx_p(FALSE)
# note: interpret effect size estimates using Cohen's 1992 power primer
# https://cran.r-project.org/web/packages/effectsize/vignettes/interpret.html
# get relevant stats
get_stats_4_fx <- function(dat, task, mod, meas, medN, ns){
# get relevant stats for reporting
best_mu <-  dat$mu[dat$task == task & dat$mod == mod & dat$meas == meas & dat$n == 313]
best_med <- dat$med[dat$task == task & dat$mod == mod & dat$meas == meas & dat$n == 313]
best_sd <- dat$sd[dat$task == task & dat$mod == mod & dat$meas == meas & dat$n == 313]
best_LB <- dat$LB[dat$task == task & dat$mod == mod & dat$meas == meas & dat$n == 313]
best_UB <- dat$UB[dat$task == task & dat$mod == mod & dat$meas == meas & dat$n == 313]
medN_mu <- dat$mu[dat$task == task & dat$mod == mod & dat$meas == meas & dat$n == medN]
medN_med <- dat$med[dat$task == task & dat$mod == mod & dat$meas == meas & dat$n == medN]
medN_sd <- dat$sd[dat$task == task & dat$mod == mod & dat$meas == meas & dat$n == medN]
medN_LB <- dat$LB[dat$task == task & dat$mod == mod & dat$meas == meas & dat$n == medN]
medN_UB <- dat$UB[dat$task == task & dat$mod == mod & dat$meas == meas & dat$n == medN]
qq_ratio <- do.call(rbind, lapply(ns, function(x)
abs(dat$LB[dat$task == task & dat$mod == mod & dat$meas == meas & dat$n == x]-
dat$UB[dat$task == task & dat$mod == mod & dat$meas == meas & dat$n == x])/
abs(dat$LB[dat$task == task & dat$mod == mod & dat$meas == meas & dat$n == 313]-
dat$UB[dat$task == task & dat$mod == mod & dat$meas == meas & dat$n == 313])))
rownames(qq_ratio) <- ns
out <- list(best_mu, best_med, best_sd, best_LB, best_UB, medN_mu, medN_med, medN_sd, medN_LB,
medN_UB, qq_ratio)
names(out) <- c("best_mu", "best_med", "best_sd", "best_LB", "best_UB",
"medN_mu", "medN_med", "medN_sd", "medN_LB", "medN_UB",
"qq_ratio")
out
}
# get the bias values
get_p_data <- function(res, m, t_n){
ps <- do.call(rbind, lapply(1:t_n, function(x) res[,"sig"][[x]][[m]]))
rownames(ps) <- c(13, 15, 18, 21, 25, 30, 36, 42, 50, 59, 69, 82, 97, 115, 136, 160, 189, 224, 265, 313)
ps
}
t_n <- 20 # for all
AB_med <- 25
AB_fx_stats <- get_stats_4_fx(sum_fx_p_dat, task="AB", mod="RM-AN", meas="esz", medN=25, ns=unique(sum_fx_p_dat$n))
load("../data/AB/EPSABstats.RData")
AB_ps <- get_p_data(res, "RM-AN", t_n)
head(sum_fx_p_dat)
# get relevant stats
get_stats_4_fx <- function(dat, task, mod, meas, medN, ns){
# get relevant stats for reporting
best_mu <-  dat$mu[dat$task == task & dat$mod == mod & dat$meas == meas & dat$n == 313]
best_med <- dat$med[dat$task == task & dat$mod == mod & dat$meas == meas & dat$n == 313]
best_sd <- dat$sd[dat$task == task & dat$mod == mod & dat$meas == meas & dat$n == 313]
best_LB <- dat$LB[dat$task == task & dat$mod == mod & dat$meas == meas & dat$n == 313]
best_UB <- dat$UB[dat$task == task & dat$mod == mod & dat$meas == meas & dat$n == 313]
best_sk <- dat$sk[dat$task == task & dat$mod == mod & dat$meas == meas & dat$n == 313]
best_ku <- dat$ku[dat$task == task & dat$mod == mod & dat$meas == meas & dat$n == 313]
medN_mu <- dat$mu[dat$task == task & dat$mod == mod & dat$meas == meas & dat$n == medN]
medN_med <- dat$med[dat$task == task & dat$mod == mod & dat$meas == meas & dat$n == medN]
medN_sd <- dat$sd[dat$task == task & dat$mod == mod & dat$meas == meas & dat$n == medN]
medN_LB <- dat$LB[dat$task == task & dat$mod == mod & dat$meas == meas & dat$n == medN]
medN_UB <- dat$UB[dat$task == task & dat$mod == mod & dat$meas == meas & dat$n == medN]
med_sk <-  dat$sk[dat$task == task & dat$mod == mod & dat$meas == meas & dat$n == medN]
med_ku <- dat$ku[dat$task == task & dat$mod == mod & dat$meas == meas & dat$n == medN]
qq_ratio <- do.call(rbind, lapply(ns, function(x)
abs(dat$LB[dat$task == task & dat$mod == mod & dat$meas == meas & dat$n == x]-
dat$UB[dat$task == task & dat$mod == mod & dat$meas == meas & dat$n == x])/
abs(dat$LB[dat$task == task & dat$mod == mod & dat$meas == meas & dat$n == 313]-
dat$UB[dat$task == task & dat$mod == mod & dat$meas == meas & dat$n == 313])))
rownames(qq_ratio) <- ns
out <- list(best_mu, best_med, best_sd, best_LB, best_UB, best_sk, best_ku,
medN_mu, medN_med, medN_sd, medN_LB, medN_UB, medN_sk, medN_ku, qq_ratio)
names(out) <- c("best_mu", "best_med", "best_sd", "best_LB", "best_UB", "best_sk", "best_ku",
"medN_mu", "medN_med", "medN_sd", "medN_LB", "medN_UB", "medN_sk", "medN_ku",
"qq_ratio")
out
}
# get the bias values
get_p_data <- function(res, m, t_n){
ps <- do.call(rbind, lapply(1:t_n, function(x) res[,"sig"][[x]][[m]]))
rownames(ps) <- c(13, 15, 18, 21, 25, 30, 36, 42, 50, 59, 69, 82, 97, 115, 136, 160, 189, 224, 265, 313)
ps
}
t_n <- 20 # for all
AB_med <- 25
AB_fx_stats <- get_stats_4_fx(sum_fx_p_dat, task="AB", mod="RM-AN", meas="esz", medN=25, ns=unique(sum_fx_p_dat$n))
# get relevant stats
get_stats_4_fx <- function(dat, task, mod, meas, medN, ns){
# get relevant stats for reporting
best_mu <-  dat$mu[dat$task == task & dat$mod == mod & dat$meas == meas & dat$n == 313]
best_med <- dat$med[dat$task == task & dat$mod == mod & dat$meas == meas & dat$n == 313]
best_sd <- dat$sd[dat$task == task & dat$mod == mod & dat$meas == meas & dat$n == 313]
best_LB <- dat$LB[dat$task == task & dat$mod == mod & dat$meas == meas & dat$n == 313]
best_UB <- dat$UB[dat$task == task & dat$mod == mod & dat$meas == meas & dat$n == 313]
best_sk <- dat$sk[dat$task == task & dat$mod == mod & dat$meas == meas & dat$n == 313]
best_ku <- dat$ku[dat$task == task & dat$mod == mod & dat$meas == meas & dat$n == 313]
medN_mu <- dat$mu[dat$task == task & dat$mod == mod & dat$meas == meas & dat$n == medN]
medN_med <- dat$med[dat$task == task & dat$mod == mod & dat$meas == meas & dat$n == medN]
medN_sd <- dat$sd[dat$task == task & dat$mod == mod & dat$meas == meas & dat$n == medN]
medN_LB <- dat$LB[dat$task == task & dat$mod == mod & dat$meas == meas & dat$n == medN]
medN_UB <- dat$UB[dat$task == task & dat$mod == mod & dat$meas == meas & dat$n == medN]
medN_sk <-  dat$sk[dat$task == task & dat$mod == mod & dat$meas == meas & dat$n == medN]
medN_ku <- dat$ku[dat$task == task & dat$mod == mod & dat$meas == meas & dat$n == medN]
qq_ratio <- do.call(rbind, lapply(ns, function(x)
abs(dat$LB[dat$task == task & dat$mod == mod & dat$meas == meas & dat$n == x]-
dat$UB[dat$task == task & dat$mod == mod & dat$meas == meas & dat$n == x])/
abs(dat$LB[dat$task == task & dat$mod == mod & dat$meas == meas & dat$n == 313]-
dat$UB[dat$task == task & dat$mod == mod & dat$meas == meas & dat$n == 313])))
rownames(qq_ratio) <- ns
out <- list(best_mu, best_med, best_sd, best_LB, best_UB, best_sk, best_ku,
medN_mu, medN_med, medN_sd, medN_LB, medN_UB, medN_sk, medN_ku, qq_ratio)
names(out) <- c("best_mu", "best_med", "best_sd", "best_LB", "best_UB", "best_sk", "best_ku",
"medN_mu", "medN_med", "medN_sd", "medN_LB", "medN_UB", "medN_sk", "medN_ku",
"qq_ratio")
out
}
# get the bias values
get_p_data <- function(res, m, t_n){
ps <- do.call(rbind, lapply(1:t_n, function(x) res[,"sig"][[x]][[m]]))
rownames(ps) <- c(13, 15, 18, 21, 25, 30, 36, 42, 50, 59, 69, 82, 97, 115, 136, 160, 189, 224, 265, 313)
ps
}
t_n <- 20 # for all
AB_med <- 25
AB_fx_stats <- get_stats_4_fx(sum_fx_p_dat, task="AB", mod="RM-AN", meas="esz", medN=25, ns=unique(sum_fx_p_dat$n))
load("../data/AB/EPSABstats.RData")
AB_ps <- get_p_data(res, "RM-AN", t_n)
AB_fx_stats
skewness
AB_fx_stats
MT_med <- 42
MT_fx_stats_ME <- get_stats_4_fx(sum_fx_p_dat, task="SD", mod="tt", meas="esz", medN=MT_med, ns=unique(sum_fx_p_dat$n))
MT_fx_stats_int <- get_stats_4_fx(sum_fx_p_dat, task="SD", mod="ta*tt", meas="esz", medN=MT_med, ns=unique(sum_fx_p_dat$n))
load("../data/SD/EPSSDstats.RData")
MT_ps_ME <- get_p_data(res, "RM-AN", t_n)
MT_ps_int <- get_p_data(res, "LME", t_n)
MT_ps_ME
MT_fx_stats_ME
skewness
install.packages("GLDEX")
rm(list=ls())
library(knitr)
# rstudio will set the folder where .Rmd file seats as work directory
# set it back to the folder where .Rproj seats
#opts_knit$set(root.dir = normalizePath("../"))
opts_chunk$set(fig.align = 'center', cache = FALSE, warning = FALSE,
message = TRUE, echo = FALSE)
options(digits = 3, width = 88, knitr.graphics.auto_pdf = TRUE,
knitr.kable.NA = '')
# knit_hooks$set(inline = function(x) {
#   x <- sprintf("%1.2f", x)
#   paste(x, collapse = ", ")
# })
library(tidyverse)
library(wesanderson)
library(ggridges)
library(cowplot)
library(rstatix)
library(emmeans)
library(ggridges)
library(car)
library(parallel)
library(kableExtra)
library(GLDEX)
source('../R/efilids_functions.R')
source('../R/R_rainclouds.R')
source('../R/doc_functions.R') # some specific plotting functions for the document
source('../R/plotting.R') # this has some stats functions we want to use in the document
source('../R/do_infer_stats.R') # extra functions for inferential stats
source('../R/get_summary_stats_for_fx_distributions.R')
paradigm.fig.pth <- '../images/FigXXXX_alltasks.pdf'
knitr::include_graphics(paradigm.fig.pth)
survey_dat <- data.frame(task = c("AB", "MT", "CC", "SRT"),
e = c(60, 60, 49, 60),
med = c(24, 40, 24, 34))
knitr::kable(survey_dat, col.names = c("task", "n exp", "med N"), align = "lcc", digits = c(0, 0, 0, 0), "simple", caption = "Typical N found from literature survey. n exp = number or experiments, med N = median N")
behav.results.fig.pth <- '../images/EPS_all_tasks_behav.pdf'
knitr::include_graphics(behav.results.fig.pth)
abfname <- "../data/total_of_313_subs_AB_task_trial_level_data.csv"
ab_res <- do.AB.analysis(abfname)
mtfname <- "../data/total_of_313_subs_SingDual_task_trial_level_data.csv"
mt_res <- do.MT.analysis(mtfname)
srtfname <- "../data/total_of_313_subs_SRT_task_trial_level_data.csv"
srt_res <- do.SRT.analysis(srtfname)
ccfname <- "../data/total_of_313_subs_CC_task_trial_level_data.csv"
cc_res <- do.CC.analysis(ccfname)
attEF.fx.fig.pth <- '../images/EPS_EF_tasks_fx_sz.pdf'
knitr::include_graphics(attEF.fx.fig.pth)
sum_fx_p_dat <- get_summary_data_fx_p(FALSE)
sum_fx_p_dat <- get_summary_data_fx_p(FALSE)
# note: interpret effect size estimates using Cohen's 1992 power primer
# https://cran.r-project.org/web/packages/effectsize/vignettes/interpret.html
View(sum_fx_p_dat)
View(sum_fx_p_dat %>% filter(meas == "esz"))
View(sum_fx_p_dat %>% filter(meas == "esz" & sk > 1))
View(sum_fx_p_dat %>% filter(meas == "esz" & sk < 1))
View(sum_fx_p_dat %>% filter(meas == "esz" & sk < -1))
View(sum_fx_p_dat %>% filter(meas == "esz" & ku > 3))
View(sum_fx_p_dat %>% filter(meas == "esz" & ku < -3))
dat <- rnorm(1000, 0, 1)
kurtosis(dat, method="fisher")
dat <- rnorm(1000000000000, 0, 1)
dat <- rnorm(1000000, 0, 1)
kurtosis(dat, method="fisher")
View(sum_fx_p_dat %>% filter(meas == "esz"))\
View(sum_fx_p_dat %>% filter(meas == "esz"))
View(sum_fx_p_dat %>% filter(meas == "esz" & task == "SRT"))
View(sum_fx_p_dat %>% filter(meas == "esz" & task == "CC"))
View(sum_fx_p_dat %>% filter(meas == "esz" & task == "AB"))
View(sum_fx_p_dat %>% filter(meas == "esz" & task == "MT\"))
View(sum_fx_p_dat %>% filter(meas == "esz" & task == "MT"))
View(sum_fx_p_dat %>% filter(meas == "esz" & task == "SD"))
## K. Garner 2022
##  quick sample of viability of comparing variability ratios
###############################################################
### assumes library(tidyverse) has been loaded in the .Rmd
##########  FUNCTIONS #####################
get_dat_fx <- function(extfnms_fx, x){
# get one dataframe given list of names and single idx
# extfnms [char, list] list of extracted files from directory
# x [int] idx
load(extfnms_fx[x])
out
}
get_fx_dat4_n <- function(task, N, extfnms_fx){
# for one task, and N, get the data and make it tidy
# task [str] - which task are you extracting data from?
# N [int] - which sample size are you extracting?
# extfnms_fx [list] list of extracted filenames
tmp <- sprintf("imm_%s_N-%d_", task, N)
fnms2opn <- grep(tmp, extfnms_fx)
dat <- lapply(fnms2opn, get_dat_fx, extfnms=extfnms_fx)
dat <- do.call(rbind, dat)
nrow <- nrow(dat)
nmod <- length(unique(dat$mod))
dat$perm <- rep(1:(nrow/nmod), each = nmod)
dat <- dat[!is.na(dat$p),]
if (task == "CC") {
dat$mod[dat$mod == "RM-AN"] <- 'b*c'
dat$mod[dat$mod == "LME"] <- 'c'
#dat <- dat %>% pivot_wider(id_cols = perm, names_from = "mod", values_from = "esz")
} else if (task == "SD"){
dat$mod[dat$mod == "RM-AN"] <- 'tt'
dat$mod[dat$mod == "LME"] <- 'ta*tt'
#dat <- dat %>% pivot_wider(id_cols = perm, names_from = "mod", values_from = "esz")
}
dat$task = task
dat
}
############ EXTRACT DIRECTORY ##############
get_summary_data_fx_p <- function(delete_files_after){
fnms_fx <- "../data/%s/EPS%s.zip"
#extfnms_fx <- unzip(fnms_fx)
Ns <- round(exp(seq(log(13), log(313), length.out = 20)))
tasks <- c("AB", "SD", "SRT", "CC")
get_dat_acrs_tsks <- function(Ns, task, fnms_fx){
f <- sprintf(fnms_fx, task, task)
if(file.exists(sprintf("EPS%s", task))){
extfnms_fx <- list.files(sprintf("EPS%s", task), full.names = TRUE)
} else {
extfnms_fx <- unzip(f)
}
do.call(rbind, lapply(Ns, get_fx_dat4_n, task=task, extfnms_fx = extfnms_fx))
}
dat <- do.call(rbind, lapply(tasks, get_dat_acrs_tsks, Ns=Ns, fnms_fx=fnms_fx))
if (delete_files_after) {
unlink(c("EPSAB", "EPSCC",
"EPSSD", "EPSSRT"),
recursive=TRUE)
}
########## GET SUMMARY STATS ################
dat %>% select(n, p, esz, mod, task) %>%
pivot_longer(p:esz, names_to = "meas", values_to = "value") %>%
group_by(n, mod, task, meas) %>%
summarise(mu=mean(value),
med=median(value),
sd=sd(value),
LB=quantile(value, .025),
UB=quantile(value, .975),
sk=skewness(value, method="fisher"),
ku=kurtosis(value, method="fisher")-3)
}
sum_fx_p_dat <- get_summary_data_fx_p(FALSE)
# note: interpret effect size estimates using Cohen's 1992 power primer
# https://cran.r-project.org/web/packages/effectsize/vignettes/interpret.html
View(sum_fx_p_dat %>% filter(meas == "esz" & task == "SD"))
View(sum_fx_p_dat %>% filter(meas == "esz" & task == "SD" & mod == "ta*tt"))
View(sum_fx_p_dat %>% filter(meas == "esz" & task == "CC" & mod == "b*c"))
library(knitr)
# rstudio will set the folder where .Rmd file seats as work directory
# set it back to the folder where .Rproj seats
#opts_knit$set(root.dir = normalizePath("../"))
opts_chunk$set(fig.align = 'center', cache = FALSE, warning = FALSE,
message = TRUE, echo = FALSE)
options(digits = 3, width = 88, knitr.graphics.auto_pdf = TRUE,
knitr.kable.NA = '')
# knit_hooks$set(inline = function(x) {
#   x <- sprintf("%1.2f", x)
#   paste(x, collapse = ", ")
# })
rm(list=ls())
library(knitr)
# rstudio will set the folder where .Rmd file seats as work directory
# set it back to the folder where .Rproj seats
#opts_knit$set(root.dir = normalizePath("../"))
opts_chunk$set(fig.align = 'center', cache = FALSE, warning = FALSE,
message = TRUE, echo = FALSE)
options(digits = 3, width = 88, knitr.graphics.auto_pdf = TRUE,
knitr.kable.NA = '')
# knit_hooks$set(inline = function(x) {
#   x <- sprintf("%1.2f", x)
#   paste(x, collapse = ", ")
# })
library(tidyverse)
library(wesanderson)
library(ggridges)
library(cowplot)
library(rstatix)
library(emmeans)
library(ggridges)
library(car)
library(parallel)
library(kableExtra)
library(moments)
source('../R/efilids_functions.R')
source('../R/R_rainclouds.R')
source('../R/doc_functions.R') # some specific plotting functions for the document
source('../R/plotting.R') # this has some stats functions we want to use in the document
source('../R/do_infer_stats.R') # extra functions for inferential stats
source('../R/get_summary_stats_for_fx_distributions.R')
paradigm.fig.pth <- '../images/FigXXXX_alltasks.pdf'
knitr::include_graphics(paradigm.fig.pth)
survey_dat <- data.frame(task = c("AB", "MT", "CC", "SRT"),
e = c(60, 60, 49, 60),
med = c(24, 40, 24, 34))
knitr::kable(survey_dat, col.names = c("task", "n exp", "med N"), align = "lcc", digits = c(0, 0, 0, 0), "simple", caption = "Typical N found from literature survey. n exp = number or experiments, med N = median N")
phit_dat
library(knitr)
# rstudio will set the folder where .Rmd file seats as work directory
# set it back to the folder where .Rproj seats
#opts_knit$set(root.dir = normalizePath("../"))
opts_chunk$set(fig.align = 'center', cache = FALSE, warning = FALSE,
message = TRUE, echo = FALSE)
options(digits = 3, width = 88, knitr.graphics.auto_pdf = TRUE,
knitr.kable.NA = '')
# knit_hooks$set(inline = function(x) {
#   x <- sprintf("%1.2f", x)
#   paste(x, collapse = ", ")
# })
library(tidyverse)
library(wesanderson)
library(ggridges)
library(cowplot)
library(rstatix)
library(emmeans)
library(ggridges)
library(car)
library(parallel)
library(kableExtra)
library(moments)
source('../R/efilids_functions.R')
source('../R/R_rainclouds.R')
source('../R/doc_functions.R') # some specific plotting functions for the document
source('../R/plotting.R') # this has some stats functions we want to use in the document
source('../R/do_infer_stats.R') # extra functions for inferential stats
source('../R/get_summary_stats_for_fx_distributions.R')
paradigm.fig.pth <- '../images/FigXXXX_alltasks.pdf'
knitr::include_graphics(paradigm.fig.pth)
survey_dat <- data.frame(task = c("AB", "MT", "CC", "SRT"),
e = c(60, 60, 49, 60),
med = c(24, 40, 24, 34))
knitr::kable(survey_dat, col.names = c("task", "n exp", "med N"), align = "lcc", digits = c(0, 0, 0, 0), "simple", caption = "Typical N found from literature survey. n exp = number or experiments, med N = median N")
behav.results.fig.pth <- '../images/EPS_all_tasks_behav.pdf'
knitr::include_graphics(behav.results.fig.pth)
abfname <- "../data/total_of_313_subs_AB_task_trial_level_data.csv"
ab_res <- do.AB.analysis(abfname)
mtfname <- "../data/total_of_313_subs_SingDual_task_trial_level_data.csv"
mt_res <- do.MT.analysis(mtfname)
srtfname <- "../data/total_of_313_subs_SRT_task_trial_level_data.csv"
srt_res <- do.SRT.analysis(srtfname)
ccfname <- "../data/total_of_313_subs_CC_task_trial_level_data.csv"
cc_res <- do.CC.analysis(ccfname)
attEF.fx.fig.pth <- '../images/EPS_EF_tasks_fx_sz.pdf'
knitr::include_graphics(attEF.fx.fig.pth)
sum_fx_p_dat <- get_summary_data_fx_p(FALSE)
# note: interpret effect size estimates using Cohen's 1992 power primer
# https://cran.r-project.org/web/packages/effectsize/vignettes/interpret.html
# get relevant stats
get_stats_4_fx <- function(dat, task, mod, meas, medN, ns){
# get relevant stats for reporting
best_mu <-  dat$mu[dat$task == task & dat$mod == mod & dat$meas == meas & dat$n == 313]
best_med <- dat$med[dat$task == task & dat$mod == mod & dat$meas == meas & dat$n == 313]
best_sd <- dat$sd[dat$task == task & dat$mod == mod & dat$meas == meas & dat$n == 313]
best_LB <- dat$LB[dat$task == task & dat$mod == mod & dat$meas == meas & dat$n == 313]
best_UB <- dat$UB[dat$task == task & dat$mod == mod & dat$meas == meas & dat$n == 313]
best_sk <- dat$sk[dat$task == task & dat$mod == mod & dat$meas == meas & dat$n == 313]
best_ku <- dat$ku[dat$task == task & dat$mod == mod & dat$meas == meas & dat$n == 313]
medN_mu <- dat$mu[dat$task == task & dat$mod == mod & dat$meas == meas & dat$n == medN]
medN_med <- dat$med[dat$task == task & dat$mod == mod & dat$meas == meas & dat$n == medN]
medN_sd <- dat$sd[dat$task == task & dat$mod == mod & dat$meas == meas & dat$n == medN]
medN_LB <- dat$LB[dat$task == task & dat$mod == mod & dat$meas == meas & dat$n == medN]
medN_UB <- dat$UB[dat$task == task & dat$mod == mod & dat$meas == meas & dat$n == medN]
medN_sk <-  dat$sk[dat$task == task & dat$mod == mod & dat$meas == meas & dat$n == medN]
medN_ku <- dat$ku[dat$task == task & dat$mod == mod & dat$meas == meas & dat$n == medN]
qq_ratio <- do.call(rbind, lapply(ns, function(x)
abs(dat$LB[dat$task == task & dat$mod == mod & dat$meas == meas & dat$n == x]-
dat$UB[dat$task == task & dat$mod == mod & dat$meas == meas & dat$n == x])/
abs(dat$LB[dat$task == task & dat$mod == mod & dat$meas == meas & dat$n == 313]-
dat$UB[dat$task == task & dat$mod == mod & dat$meas == meas & dat$n == 313])))
rownames(qq_ratio) <- ns
out <- list(best_mu, best_med, best_sd, best_LB, best_UB, best_sk, best_ku,
medN_mu, medN_med, medN_sd, medN_LB, medN_UB, medN_sk, medN_ku, qq_ratio)
names(out) <- c("best_mu", "best_med", "best_sd", "best_LB", "best_UB", "best_sk", "best_ku",
"medN_mu", "medN_med", "medN_sd", "medN_LB", "medN_UB", "medN_sk", "medN_ku",
"qq_ratio")
out
}
# get the bias values
get_p_data <- function(res, m, t_n){
ps <- do.call(rbind, lapply(1:t_n, function(x) res[,"sig"][[x]][[m]]))
rownames(ps) <- c(13, 15, 18, 21, 25, 30, 36, 42, 50, 59, 69, 82, 97, 115, 136, 160, 189, 224, 265, 313)
ps
}
t_n <- 20 # for all
AB_med <- 25
AB_fx_stats <- get_stats_4_fx(sum_fx_p_dat, task="AB", mod="RM-AN", meas="esz", medN=25, ns=unique(sum_fx_p_dat$n))
load("../data/AB/EPSABstats.RData")
AB_ps <- get_p_data(res, "RM-AN", t_n)
MT_med <- 42
MT_fx_stats_ME <- get_stats_4_fx(sum_fx_p_dat, task="SD", mod="tt", meas="esz", medN=MT_med, ns=unique(sum_fx_p_dat$n))
MT_fx_stats_int <- get_stats_4_fx(sum_fx_p_dat, task="SD", mod="ta*tt", meas="esz", medN=MT_med, ns=unique(sum_fx_p_dat$n))
load("../data/SD/EPSSDstats.RData")
MT_ps_ME <- get_p_data(res, "RM-AN", t_n)
MT_ps_int <- get_p_data(res, "LME", t_n)
SRT_med <- 36
SRT_fx_stats <- get_stats_4_fx(sum_fx_p_dat, task="SRT", mod="RM-AN", meas="esz", medN=SRT_med, ns=unique(sum_fx_p_dat$n))
load("../data/SRT/EPSSRTstats.RData")
SRT_ps <- get_p_data(res, "RM-AN", t_n)
IL.fx.fig.pth <- '../images/EPS_IL_tasks_fx_sz.pdf'
knitr::include_graphics(IL.fx.fig.pth)
CC_med <- 25
CC_fx_stats_int <- get_stats_4_fx(sum_fx_p_dat, task="CC", mod="b*c", meas="esz", medN=CC_med, ns=unique(sum_fx_p_dat$n))
CC_fx_stats_ME <- get_stats_4_fx(sum_fx_p_dat, task="CC", mod="c", meas="esz", medN=CC_med, ns=unique(sum_fx_p_dat$n))
load("../data/CC/EPSCCstats.RData")
CC_ps_int <- get_p_data(res, "RM-AN", t_n)
CC_ps_ME <- get_p_data(res, "LME", t_n)
# first concatenate the qq-ratios
stats <- list(AB_fx_stats, MT_fx_stats_ME, MT_fx_stats_int,
SRT_fx_stats, CC_fx_stats_int, CC_fx_stats_ME)
qqrats_acrss_tsks <- unlist(lapply(stats, function(x) x[["qq_ratio"]]))
qqrats_acrss_tsks <- tibble(task = rep(c("AB", "tc", "tc*m", "SRT", "b*c", "c"), each=20),
N = rep(c(13, 15, 18, 21, 25, 30, 36, 42, 50, 59, 69, 82, 97, 115, 136, 160, 189, 224, 265, 313), times=6),
qqrat = qqrats_acrss_tsks)
# now you can run the code in R/plot_metrics_by_N_across_tasks.R to generate the qq ratio plot
qqrat.fx.fig.pth <- '../images/EPS_all_tasks_qqratio.pdf'
knitr::include_graphics(qqrat.fx.fig.pth)
tasks <- c("AB", "CC", "SRT", "SD")
ftmplt = "../data/%s/%s_phitbest.RData"
########### LOAD DATASETS ################
get_prct_dats <- function(ftmplt, task){
load(sprintf(ftmplt, task, task))
if(task == "AB" | task == "SRT"){
out$mod <- NA
out$mod <- task
}
out
}
phit_dat <- do.call(rbind, lapply(tasks, get_prct_dats, ftmplt=ftmplt))
phit_dat
View(phit_dat)
.4 + .55
.95/2
.54 + .57 + .59
View(phit_dat)
# get the bias values
get_meta_bias <- function(res, m){
bias <- do.call(rbind, lapply(1:t_n, function(x) res[,"stats_sig"][[x]]["mu", m][[1]]-
res[,"stats_fx"][[x]]["mu", m][[1]]))
rownames(bias) <- c(13, 15, 18, 21, 25, 30, 36, 42, 50, 59, 69, 82, 97, 115, 136, 160, 189, 224, 265, 313)
bias
}
load("../data/SD/EPSSDstats.RData")
t_n <- 20
MT_t <- get_meta_bias(res, "RM-AN")
MT_tm <- get_meta_bias(res, "LME")
load("../data/CC/EPSCCstats.RData")
CC_bc <- get_meta_bias(res, "RM-AN")
CC_c <-  get_meta_bias(res, "LME")
MT_tm
CC_bc
CC_bc["69",]
CC_bc["59",]
CC_bc["30",]
CC_bc["36",]
CC_bc["42",]
CC_bc["50",]
ns
Ns
phit_dat
View(phit_dat)
setwd("~/Documents/projects/DA_VisRoutes/doc/assessing-the-role-of-dopamine-on-the-formation-of-contextually-relevant-visual-routines")
